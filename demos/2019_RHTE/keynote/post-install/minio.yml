# creates minio bucket on destination cluster
- hosts: localhost 
  connection: local
  vars:
    - ocp_version: "4"
  tasks:
    - include_tasks: "./include/common.yml"

- hosts: remote
  vars_files:
    - "../4.x/my_vars.yml"
    - "../4.x/ocp4_vars.yml"
  vars:
    - ansible_ssh_private_key_file: "~/.ssh/{{ key_name }}.pem"
    - ansible_user: "{{ remote_user|d('ec2-user') }}"
    - minio_bucket: "mig-bucket"
  tasks:
    - include_tasks: "./include/connection.yml"

    - name: "Reading minio route"
      shell: "oc get route minio -n gpte-minio -o go-template='{{ '{{' }} .spec.host {{ '}}' }}{{ '{{' }} println {{ '}}' }}'"
      register: minio_route

    - block:
      - name: "Checking if S3 bucket exists"
        shell: "aws s3 ls --endpoint http://{{ minio_route.stdout }} | awk '{ print $3 }'"
        register: s3_buckets

      - name: "Creating S3 bucket" 
        shell: "aws s3 mb s3://{{ minio_bucket }} --endpoint http://{{ minio_route.stdout }}" 
        when: minio_bucket not in s3_buckets.stdout_lines
        register: new_bucket
        retries: 5
        until: new_bucket.rc == 0
        delay: 2
      environment:
        AWS_SECRET_ACCESS_KEY: "{{ _minio_secret_key }}"
        AWS_ACCESS_KEY_ID: "{{ _minio_access_key }}"

    - name: "Creating temp dir"
      tempfile:
        state: directory
      register: temp_dir

    - name: "Generating migstorage definition"
      template:
        src: "./include/migstorage.yml.j2"
        dest: "{{ temp_dir.path }}/migstorage.yml"
      vars:
        - region: "{{ aws_region }}"
        - minio_url: "http://{{ minio_route.stdout }}"

    - name: "Creating migstorage"
      shell: "oc apply -f {{ temp_dir.path }}/migstorage.yml"
